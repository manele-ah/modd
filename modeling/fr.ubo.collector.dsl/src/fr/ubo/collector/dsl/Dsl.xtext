grammar fr.ubo.collector.dsl.Dsl with org.eclipse.xtext.common.Terminals

import "http://fr.ubo.collector"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


DataCollector returns DataCollector:
	'DataCollector'
	'{'
		drone=Drone
		pubBroker=PubBroker
		subBroker=SubBroker
		'Publishers' '{' publishers+=Publisher ';' (publishers+=Publisher ';')* '}' 
		'Subscriptions' '{' subscribers+=Subscriber ';' (subscribers+=Subscriber ';')* '}'
	'}';

Endpoint returns Endpoint:
	TcpIpEndpoint;

Drone returns Drone:
	'Drone'
	name=EString
	'{'
		'Sensors' 
		'{' 
			sensorsDrone+=Sensor (sensorsDrone+=Sensor)* 
		'}'
	'}';

PubBroker returns PubBroker:
	'PubBroker'
	name=EString
	'('
		id=Endpoint ','
		logPath=EString
	')' ';';

Publisher returns Publisher:
	'Publisher'
	name=EString
	'('
		id=Endpoint ','
		period=EDouble ','
		publishedMeasures+=[MeasuredVariable|EString] (',' publishedMeasures+=[MeasuredVariable|EString])* 
	')';

Subscriber returns Subscriber:
	'Subscriber'
	name=EString
	'('
		id=Endpoint ','
		monitoredMeasure=[MeasuredVariable|EString] ','
		period=EDouble ','
		aggregation=Aggregation
	')';

SubBroker returns SubBroker:
	'SubBroker'
	name=EString
	'('
		id=Endpoint ','
		configurationPath=EString
	')' ';';

EString returns ecore::EString:
	STRING | ID;

Sensor returns Sensor:
	'Sensor'
	name=EString
	'measures'
	'{'
		sensorMeasuredVariables+=MeasuredVariable ';' (sensorMeasuredVariables+=MeasuredVariable ';')* 
	'}';

MeasuredVariable returns MeasuredVariable:
	name=EString
	'('
		unit=MeasurementDataUnit	
	')';
	
enum MeasurementDataUnit returns MeasurementDataUnit:
				METER = 'METER' | METER_PER_SECOND = 'METER_PER_SECOND' | METER_PER_SECOND_SQUARED = 'METER_PER_SECOND_SQUARED' | DEGREE_CELSIUS = 'DEGREE_CELSIUS' | RADIAN = 'RADIAN' | RADIAN_PER_SECOND = 'RADIAN_PER_SECOND' | BAR = 'BAR' | LITER = 'LITER' | GRAM = 'GRAM' | NONE = 'NONE';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EInt returns ecore::EInt:
	'-'? INT;

TcpIpEndpoint returns TcpIpEndpoint:
	ipAddress=EString ':'
	port=EInt;

enum Aggregation returns Aggregation:
				MIN = 'MIN' | MAX = 'MAX' | AVERAGE = 'AVERAGE' | FIRST = 'FIRST' | LAST = 'LAST' | ALL = 'ALL';
