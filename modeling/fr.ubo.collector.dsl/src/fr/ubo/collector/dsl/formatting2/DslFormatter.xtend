/*
 * generated by Xtext 2.14.0
 */
package fr.ubo.collector.dsl.formatting2

import com.google.inject.Inject
import fr.ubo.collector.DataCollector
import fr.ubo.collector.Drone
import fr.ubo.collector.dsl.services.DslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class DslFormatter extends AbstractFormatter2 {
	
	@Inject extension DslGrammarAccess

	def dispatch void format(DataCollector dataCollector, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		dataCollector.drone.format
		dataCollector.pubBroker.format
		dataCollector.subBroker.format
		for (publisher : dataCollector.publishers) {
			publisher.format
		}
		for (subscriber : dataCollector.subscribers) {
			subscriber.format
		}
	}

	def dispatch void format(Drone drone, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (sensor : drone.sensorsDrone) {
			sensor.format
		}
	}
	
	// TODO: implement for PubBroker, Publisher, Subscriber, SubBroker, Sensor
}
