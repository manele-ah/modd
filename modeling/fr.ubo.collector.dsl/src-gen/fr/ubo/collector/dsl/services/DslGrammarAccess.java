/*
 * generated by Xtext 2.14.0
 */
package fr.ubo.collector.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DataCollectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.DataCollector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataCollectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDroneAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDroneDroneParserRuleCall_2_0 = (RuleCall)cDroneAssignment_2.eContents().get(0);
		private final Assignment cPubBrokerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPubBrokerPubBrokerParserRuleCall_3_0 = (RuleCall)cPubBrokerAssignment_3.eContents().get(0);
		private final Assignment cSubBrokerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubBrokerSubBrokerParserRuleCall_4_0 = (RuleCall)cSubBrokerAssignment_4.eContents().get(0);
		private final Keyword cPublishersKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPublishersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPublishersPublisherParserRuleCall_7_0 = (RuleCall)cPublishersAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cPublishersAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cPublishersPublisherParserRuleCall_9_0_0 = (RuleCall)cPublishersAssignment_9_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSubscriptionsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cSubscribersAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cSubscribersSubscriberParserRuleCall_13_0 = (RuleCall)cSubscribersAssignment_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Assignment cSubscribersAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final RuleCall cSubscribersSubscriberParserRuleCall_15_0_0 = (RuleCall)cSubscribersAssignment_15_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//DataCollector:
		//	'DataCollector'
		//	'{'
		//	drone=Drone
		//	pubBroker=PubBroker
		//	subBroker=SubBroker
		//	'Publishers' '{' publishers+=Publisher ';' (publishers+=Publisher ';')* '}'
		//	'Subscriptions' '{' subscribers+=Subscriber ';' (subscribers+=Subscriber ';')* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DataCollector' '{' drone=Drone pubBroker=PubBroker subBroker=SubBroker 'Publishers' '{' publishers+=Publisher ';'
		//(publishers+=Publisher ';')* '}' 'Subscriptions' '{' subscribers+=Subscriber ';' (subscribers+=Subscriber ';')* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DataCollector'
		public Keyword getDataCollectorKeyword_0() { return cDataCollectorKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//drone=Drone
		public Assignment getDroneAssignment_2() { return cDroneAssignment_2; }
		
		//Drone
		public RuleCall getDroneDroneParserRuleCall_2_0() { return cDroneDroneParserRuleCall_2_0; }
		
		//pubBroker=PubBroker
		public Assignment getPubBrokerAssignment_3() { return cPubBrokerAssignment_3; }
		
		//PubBroker
		public RuleCall getPubBrokerPubBrokerParserRuleCall_3_0() { return cPubBrokerPubBrokerParserRuleCall_3_0; }
		
		//subBroker=SubBroker
		public Assignment getSubBrokerAssignment_4() { return cSubBrokerAssignment_4; }
		
		//SubBroker
		public RuleCall getSubBrokerSubBrokerParserRuleCall_4_0() { return cSubBrokerSubBrokerParserRuleCall_4_0; }
		
		//'Publishers'
		public Keyword getPublishersKeyword_5() { return cPublishersKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//publishers+=Publisher
		public Assignment getPublishersAssignment_7() { return cPublishersAssignment_7; }
		
		//Publisher
		public RuleCall getPublishersPublisherParserRuleCall_7_0() { return cPublishersPublisherParserRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
		
		//(publishers+=Publisher ';')*
		public Group getGroup_9() { return cGroup_9; }
		
		//publishers+=Publisher
		public Assignment getPublishersAssignment_9_0() { return cPublishersAssignment_9_0; }
		
		//Publisher
		public RuleCall getPublishersPublisherParserRuleCall_9_0_0() { return cPublishersPublisherParserRuleCall_9_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9_1() { return cSemicolonKeyword_9_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'Subscriptions'
		public Keyword getSubscriptionsKeyword_11() { return cSubscriptionsKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//subscribers+=Subscriber
		public Assignment getSubscribersAssignment_13() { return cSubscribersAssignment_13; }
		
		//Subscriber
		public RuleCall getSubscribersSubscriberParserRuleCall_13_0() { return cSubscribersSubscriberParserRuleCall_13_0; }
		
		//';'
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
		
		//(subscribers+=Subscriber ';')*
		public Group getGroup_15() { return cGroup_15; }
		
		//subscribers+=Subscriber
		public Assignment getSubscribersAssignment_15_0() { return cSubscribersAssignment_15_0; }
		
		//Subscriber
		public RuleCall getSubscribersSubscriberParserRuleCall_15_0_0() { return cSubscribersSubscriberParserRuleCall_15_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_15_1() { return cSemicolonKeyword_15_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class EndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Endpoint");
		private final RuleCall cTcpIpEndpointParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Endpoint:
		//	TcpIpEndpoint;
		@Override public ParserRule getRule() { return rule; }
		
		//TcpIpEndpoint
		public RuleCall getTcpIpEndpointParserRuleCall() { return cTcpIpEndpointParserRuleCall; }
	}
	public class DroneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Drone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSensorsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSensorsDroneAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSensorsDroneSensorParserRuleCall_5_0 = (RuleCall)cSensorsDroneAssignment_5.eContents().get(0);
		private final Assignment cSensorsDroneAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSensorsDroneSensorParserRuleCall_6_0 = (RuleCall)cSensorsDroneAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Drone:
		//	'Drone'
		//	name=EString
		//	'{'
		//	'Sensors'
		//	'{'
		//	sensorsDrone+=Sensor sensorsDrone+=Sensor*
		//	'}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Drone' name=EString '{' 'Sensors' '{' sensorsDrone+=Sensor sensorsDrone+=Sensor* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Drone'
		public Keyword getDroneKeyword_0() { return cDroneKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Sensors'
		public Keyword getSensorsKeyword_3() { return cSensorsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//sensorsDrone+=Sensor
		public Assignment getSensorsDroneAssignment_5() { return cSensorsDroneAssignment_5; }
		
		//Sensor
		public RuleCall getSensorsDroneSensorParserRuleCall_5_0() { return cSensorsDroneSensorParserRuleCall_5_0; }
		
		//sensorsDrone+=Sensor*
		public Assignment getSensorsDroneAssignment_6() { return cSensorsDroneAssignment_6; }
		
		//Sensor
		public RuleCall getSensorsDroneSensorParserRuleCall_6_0() { return cSensorsDroneSensorParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class PubBrokerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.PubBroker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPubBrokerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEndpointParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLogPathAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLogPathEStringParserRuleCall_5_0 = (RuleCall)cLogPathAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//PubBroker:
		//	'PubBroker'
		//	name=EString
		//	'('
		//	id=Endpoint ','
		//	logPath=EString
		//	')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'PubBroker' name=EString '(' id=Endpoint ',' logPath=EString ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'PubBroker'
		public Keyword getPubBrokerKeyword_0() { return cPubBrokerKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//id=Endpoint
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//Endpoint
		public RuleCall getIdEndpointParserRuleCall_3_0() { return cIdEndpointParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//logPath=EString
		public Assignment getLogPathAssignment_5() { return cLogPathAssignment_5; }
		
		//EString
		public RuleCall getLogPathEStringParserRuleCall_5_0() { return cLogPathEStringParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class PublisherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Publisher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPublisherKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEndpointParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPeriodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPeriodEDoubleParserRuleCall_5_0 = (RuleCall)cPeriodAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPublishedMeasuresAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cPublishedMeasuresMeasuredVariableCrossReference_7_0 = (CrossReference)cPublishedMeasuresAssignment_7.eContents().get(0);
		private final RuleCall cPublishedMeasuresMeasuredVariableEStringParserRuleCall_7_0_1 = (RuleCall)cPublishedMeasuresMeasuredVariableCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPublishedMeasuresAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cPublishedMeasuresMeasuredVariableCrossReference_8_1_0 = (CrossReference)cPublishedMeasuresAssignment_8_1.eContents().get(0);
		private final RuleCall cPublishedMeasuresMeasuredVariableEStringParserRuleCall_8_1_0_1 = (RuleCall)cPublishedMeasuresMeasuredVariableCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Publisher:
		//	'Publisher'
		//	name=EString
		//	'('
		//	id=Endpoint ','
		//	period=EDouble ','
		//	publishedMeasures+=[MeasuredVariable|EString] (',' publishedMeasures+=[MeasuredVariable|EString])*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'Publisher' name=EString '(' id=Endpoint ',' period=EDouble ',' publishedMeasures+=[MeasuredVariable|EString] (','
		//publishedMeasures+=[MeasuredVariable|EString])* ')'
		public Group getGroup() { return cGroup; }
		
		//'Publisher'
		public Keyword getPublisherKeyword_0() { return cPublisherKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//id=Endpoint
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//Endpoint
		public RuleCall getIdEndpointParserRuleCall_3_0() { return cIdEndpointParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//period=EDouble
		public Assignment getPeriodAssignment_5() { return cPeriodAssignment_5; }
		
		//EDouble
		public RuleCall getPeriodEDoubleParserRuleCall_5_0() { return cPeriodEDoubleParserRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//publishedMeasures+=[MeasuredVariable|EString]
		public Assignment getPublishedMeasuresAssignment_7() { return cPublishedMeasuresAssignment_7; }
		
		//[MeasuredVariable|EString]
		public CrossReference getPublishedMeasuresMeasuredVariableCrossReference_7_0() { return cPublishedMeasuresMeasuredVariableCrossReference_7_0; }
		
		//EString
		public RuleCall getPublishedMeasuresMeasuredVariableEStringParserRuleCall_7_0_1() { return cPublishedMeasuresMeasuredVariableEStringParserRuleCall_7_0_1; }
		
		//(',' publishedMeasures+=[MeasuredVariable|EString])*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//publishedMeasures+=[MeasuredVariable|EString]
		public Assignment getPublishedMeasuresAssignment_8_1() { return cPublishedMeasuresAssignment_8_1; }
		
		//[MeasuredVariable|EString]
		public CrossReference getPublishedMeasuresMeasuredVariableCrossReference_8_1_0() { return cPublishedMeasuresMeasuredVariableCrossReference_8_1_0; }
		
		//EString
		public RuleCall getPublishedMeasuresMeasuredVariableEStringParserRuleCall_8_1_0_1() { return cPublishedMeasuresMeasuredVariableEStringParserRuleCall_8_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class SubscriberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Subscriber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubscriberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEndpointParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMonitoredMeasureAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cMonitoredMeasureMeasuredVariableCrossReference_5_0 = (CrossReference)cMonitoredMeasureAssignment_5.eContents().get(0);
		private final RuleCall cMonitoredMeasureMeasuredVariableEStringParserRuleCall_5_0_1 = (RuleCall)cMonitoredMeasureMeasuredVariableCrossReference_5_0.eContents().get(1);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPeriodAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPeriodEDoubleParserRuleCall_7_0 = (RuleCall)cPeriodAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAggregationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAggregationAggregationEnumRuleCall_9_0 = (RuleCall)cAggregationAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Subscriber:
		//	'Subscriber'
		//	name=EString
		//	'('
		//	id=Endpoint ','
		//	monitoredMeasure=[MeasuredVariable|EString] ','
		//	period=EDouble ','
		//	aggregation=Aggregation
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'Subscriber' name=EString '(' id=Endpoint ',' monitoredMeasure=[MeasuredVariable|EString] ',' period=EDouble ','
		//aggregation=Aggregation ')'
		public Group getGroup() { return cGroup; }
		
		//'Subscriber'
		public Keyword getSubscriberKeyword_0() { return cSubscriberKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//id=Endpoint
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//Endpoint
		public RuleCall getIdEndpointParserRuleCall_3_0() { return cIdEndpointParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//monitoredMeasure=[MeasuredVariable|EString]
		public Assignment getMonitoredMeasureAssignment_5() { return cMonitoredMeasureAssignment_5; }
		
		//[MeasuredVariable|EString]
		public CrossReference getMonitoredMeasureMeasuredVariableCrossReference_5_0() { return cMonitoredMeasureMeasuredVariableCrossReference_5_0; }
		
		//EString
		public RuleCall getMonitoredMeasureMeasuredVariableEStringParserRuleCall_5_0_1() { return cMonitoredMeasureMeasuredVariableEStringParserRuleCall_5_0_1; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//period=EDouble
		public Assignment getPeriodAssignment_7() { return cPeriodAssignment_7; }
		
		//EDouble
		public RuleCall getPeriodEDoubleParserRuleCall_7_0() { return cPeriodEDoubleParserRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//aggregation=Aggregation
		public Assignment getAggregationAssignment_9() { return cAggregationAssignment_9; }
		
		//Aggregation
		public RuleCall getAggregationAggregationEnumRuleCall_9_0() { return cAggregationAggregationEnumRuleCall_9_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}
	public class SubBrokerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.SubBroker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubBrokerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEndpointParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConfigurationPathAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConfigurationPathEStringParserRuleCall_5_0 = (RuleCall)cConfigurationPathAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SubBroker:
		//	'SubBroker'
		//	name=EString
		//	'('
		//	id=Endpoint ','
		//	configurationPath=EString
		//	')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'SubBroker' name=EString '(' id=Endpoint ',' configurationPath=EString ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'SubBroker'
		public Keyword getSubBrokerKeyword_0() { return cSubBrokerKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//id=Endpoint
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//Endpoint
		public RuleCall getIdEndpointParserRuleCall_3_0() { return cIdEndpointParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//configurationPath=EString
		public Assignment getConfigurationPathAssignment_5() { return cConfigurationPathAssignment_5; }
		
		//EString
		public RuleCall getConfigurationPathEStringParserRuleCall_5_0() { return cConfigurationPathEStringParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Sensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cMeasuresKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSensorMeasuredVariablesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSensorMeasuredVariablesMeasuredVariableParserRuleCall_4_0 = (RuleCall)cSensorMeasuredVariablesAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cSensorMeasuredVariablesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cSensorMeasuredVariablesMeasuredVariableParserRuleCall_6_0_0 = (RuleCall)cSensorMeasuredVariablesAssignment_6_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Sensor:
		//	'Sensor'
		//	name=EString
		//	'measures'
		//	'{'
		//	sensorMeasuredVariables+=MeasuredVariable ';' (sensorMeasuredVariables+=MeasuredVariable ';')*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Sensor' name=EString 'measures' '{' sensorMeasuredVariables+=MeasuredVariable ';'
		//(sensorMeasuredVariables+=MeasuredVariable ';')* '}'
		public Group getGroup() { return cGroup; }
		
		//'Sensor'
		public Keyword getSensorKeyword_0() { return cSensorKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'measures'
		public Keyword getMeasuresKeyword_2() { return cMeasuresKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//sensorMeasuredVariables+=MeasuredVariable
		public Assignment getSensorMeasuredVariablesAssignment_4() { return cSensorMeasuredVariablesAssignment_4; }
		
		//MeasuredVariable
		public RuleCall getSensorMeasuredVariablesMeasuredVariableParserRuleCall_4_0() { return cSensorMeasuredVariablesMeasuredVariableParserRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//(sensorMeasuredVariables+=MeasuredVariable ';')*
		public Group getGroup_6() { return cGroup_6; }
		
		//sensorMeasuredVariables+=MeasuredVariable
		public Assignment getSensorMeasuredVariablesAssignment_6_0() { return cSensorMeasuredVariablesAssignment_6_0; }
		
		//MeasuredVariable
		public RuleCall getSensorMeasuredVariablesMeasuredVariableParserRuleCall_6_0_0() { return cSensorMeasuredVariablesMeasuredVariableParserRuleCall_6_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MeasuredVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.MeasuredVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUnitAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUnitMeasurementDataUnitEnumRuleCall_2_0 = (RuleCall)cUnitAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MeasuredVariable:
		//	name=EString
		//	'('
		//	unit=MeasurementDataUnit
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '(' unit=MeasurementDataUnit ')'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//unit=MeasurementDataUnit
		public Assignment getUnitAssignment_2() { return cUnitAssignment_2; }
		
		//MeasurementDataUnit
		public RuleCall getUnitMeasurementDataUnitEnumRuleCall_2_0() { return cUnitMeasurementDataUnitEnumRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TcpIpEndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.TcpIpEndpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIpAddressAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIpAddressEStringParserRuleCall_0_0 = (RuleCall)cIpAddressAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortEIntParserRuleCall_2_0 = (RuleCall)cPortAssignment_2.eContents().get(0);
		
		//TcpIpEndpoint:
		//	ipAddress=EString ':'
		//	port=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//ipAddress=EString ':' port=EInt
		public Group getGroup() { return cGroup; }
		
		//ipAddress=EString
		public Assignment getIpAddressAssignment_0() { return cIpAddressAssignment_0; }
		
		//EString
		public RuleCall getIpAddressEStringParserRuleCall_0_0() { return cIpAddressEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//port=EInt
		public Assignment getPortAssignment_2() { return cPortAssignment_2; }
		
		//EInt
		public RuleCall getPortEIntParserRuleCall_2_0() { return cPortEIntParserRuleCall_2_0; }
	}
	
	public class MeasurementDataUnitElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.MeasurementDataUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMETEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMETERMETERKeyword_0_0 = (Keyword)cMETEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMETER_PER_SECONDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMETER_PER_SECONDMETER_PER_SECONDKeyword_1_0 = (Keyword)cMETER_PER_SECONDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMETER_PER_SECOND_SQUAREDMETER_PER_SECOND_SQUAREDKeyword_2_0 = (Keyword)cMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDEGREE_CELSIUSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDEGREE_CELSIUSDEGREE_CELSIUSKeyword_3_0 = (Keyword)cDEGREE_CELSIUSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRADIANEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRADIANRADIANKeyword_4_0 = (Keyword)cRADIANEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cRADIAN_PER_SECONDEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cRADIAN_PER_SECONDRADIAN_PER_SECONDKeyword_5_0 = (Keyword)cRADIAN_PER_SECONDEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBAREnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBARBARKeyword_6_0 = (Keyword)cBAREnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cLITEREnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cLITERLITERKeyword_7_0 = (Keyword)cLITEREnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cGRAMEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cGRAMGRAMKeyword_8_0 = (Keyword)cGRAMEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cNONENONEKeyword_9_0 = (Keyword)cNONEEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum MeasurementDataUnit:
		//	METER | METER_PER_SECOND | METER_PER_SECOND_SQUARED | DEGREE_CELSIUS | RADIAN | RADIAN_PER_SECOND | BAR | LITER |
		//	GRAM | NONE;
		public EnumRule getRule() { return rule; }
		
		//METER | METER_PER_SECOND | METER_PER_SECOND_SQUARED | DEGREE_CELSIUS | RADIAN | RADIAN_PER_SECOND | BAR | LITER | GRAM |
		//NONE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//METER
		public EnumLiteralDeclaration getMETEREnumLiteralDeclaration_0() { return cMETEREnumLiteralDeclaration_0; }
		
		//'METER'
		public Keyword getMETERMETERKeyword_0_0() { return cMETERMETERKeyword_0_0; }
		
		//METER_PER_SECOND
		public EnumLiteralDeclaration getMETER_PER_SECONDEnumLiteralDeclaration_1() { return cMETER_PER_SECONDEnumLiteralDeclaration_1; }
		
		//'METER_PER_SECOND'
		public Keyword getMETER_PER_SECONDMETER_PER_SECONDKeyword_1_0() { return cMETER_PER_SECONDMETER_PER_SECONDKeyword_1_0; }
		
		//METER_PER_SECOND_SQUARED
		public EnumLiteralDeclaration getMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2() { return cMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2; }
		
		//'METER_PER_SECOND_SQUARED'
		public Keyword getMETER_PER_SECOND_SQUAREDMETER_PER_SECOND_SQUAREDKeyword_2_0() { return cMETER_PER_SECOND_SQUAREDMETER_PER_SECOND_SQUAREDKeyword_2_0; }
		
		//DEGREE_CELSIUS
		public EnumLiteralDeclaration getDEGREE_CELSIUSEnumLiteralDeclaration_3() { return cDEGREE_CELSIUSEnumLiteralDeclaration_3; }
		
		//'DEGREE_CELSIUS'
		public Keyword getDEGREE_CELSIUSDEGREE_CELSIUSKeyword_3_0() { return cDEGREE_CELSIUSDEGREE_CELSIUSKeyword_3_0; }
		
		//RADIAN
		public EnumLiteralDeclaration getRADIANEnumLiteralDeclaration_4() { return cRADIANEnumLiteralDeclaration_4; }
		
		//'RADIAN'
		public Keyword getRADIANRADIANKeyword_4_0() { return cRADIANRADIANKeyword_4_0; }
		
		//RADIAN_PER_SECOND
		public EnumLiteralDeclaration getRADIAN_PER_SECONDEnumLiteralDeclaration_5() { return cRADIAN_PER_SECONDEnumLiteralDeclaration_5; }
		
		//'RADIAN_PER_SECOND'
		public Keyword getRADIAN_PER_SECONDRADIAN_PER_SECONDKeyword_5_0() { return cRADIAN_PER_SECONDRADIAN_PER_SECONDKeyword_5_0; }
		
		//BAR
		public EnumLiteralDeclaration getBAREnumLiteralDeclaration_6() { return cBAREnumLiteralDeclaration_6; }
		
		//'BAR'
		public Keyword getBARBARKeyword_6_0() { return cBARBARKeyword_6_0; }
		
		//LITER
		public EnumLiteralDeclaration getLITEREnumLiteralDeclaration_7() { return cLITEREnumLiteralDeclaration_7; }
		
		//'LITER'
		public Keyword getLITERLITERKeyword_7_0() { return cLITERLITERKeyword_7_0; }
		
		//GRAM
		public EnumLiteralDeclaration getGRAMEnumLiteralDeclaration_8() { return cGRAMEnumLiteralDeclaration_8; }
		
		//'GRAM'
		public Keyword getGRAMGRAMKeyword_8_0() { return cGRAMGRAMKeyword_8_0; }
		
		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_9() { return cNONEEnumLiteralDeclaration_9; }
		
		//'NONE'
		public Keyword getNONENONEKeyword_9_0() { return cNONENONEKeyword_9_0; }
	}
	public class AggregationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ubo.collector.dsl.Dsl.Aggregation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMINEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMINMINKeyword_0_0 = (Keyword)cMINEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMAXEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMAXMAXKeyword_1_0 = (Keyword)cMAXEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAVERAGEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAVERAGEAVERAGEKeyword_2_0 = (Keyword)cAVERAGEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFIRSTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFIRSTFIRSTKeyword_3_0 = (Keyword)cFIRSTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLASTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLASTLASTKeyword_4_0 = (Keyword)cLASTEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cALLEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cALLALLKeyword_5_0 = (Keyword)cALLEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Aggregation:
		//	MIN | MAX | AVERAGE | FIRST | LAST | ALL;
		public EnumRule getRule() { return rule; }
		
		//MIN | MAX | AVERAGE | FIRST | LAST | ALL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MIN
		public EnumLiteralDeclaration getMINEnumLiteralDeclaration_0() { return cMINEnumLiteralDeclaration_0; }
		
		//'MIN'
		public Keyword getMINMINKeyword_0_0() { return cMINMINKeyword_0_0; }
		
		//MAX
		public EnumLiteralDeclaration getMAXEnumLiteralDeclaration_1() { return cMAXEnumLiteralDeclaration_1; }
		
		//'MAX'
		public Keyword getMAXMAXKeyword_1_0() { return cMAXMAXKeyword_1_0; }
		
		//AVERAGE
		public EnumLiteralDeclaration getAVERAGEEnumLiteralDeclaration_2() { return cAVERAGEEnumLiteralDeclaration_2; }
		
		//'AVERAGE'
		public Keyword getAVERAGEAVERAGEKeyword_2_0() { return cAVERAGEAVERAGEKeyword_2_0; }
		
		//FIRST
		public EnumLiteralDeclaration getFIRSTEnumLiteralDeclaration_3() { return cFIRSTEnumLiteralDeclaration_3; }
		
		//'FIRST'
		public Keyword getFIRSTFIRSTKeyword_3_0() { return cFIRSTFIRSTKeyword_3_0; }
		
		//LAST
		public EnumLiteralDeclaration getLASTEnumLiteralDeclaration_4() { return cLASTEnumLiteralDeclaration_4; }
		
		//'LAST'
		public Keyword getLASTLASTKeyword_4_0() { return cLASTLASTKeyword_4_0; }
		
		//ALL
		public EnumLiteralDeclaration getALLEnumLiteralDeclaration_5() { return cALLEnumLiteralDeclaration_5; }
		
		//'ALL'
		public Keyword getALLALLKeyword_5_0() { return cALLALLKeyword_5_0; }
	}
	
	private final DataCollectorElements pDataCollector;
	private final EndpointElements pEndpoint;
	private final DroneElements pDrone;
	private final PubBrokerElements pPubBroker;
	private final PublisherElements pPublisher;
	private final SubscriberElements pSubscriber;
	private final SubBrokerElements pSubBroker;
	private final EStringElements pEString;
	private final SensorElements pSensor;
	private final MeasuredVariableElements pMeasuredVariable;
	private final MeasurementDataUnitElements eMeasurementDataUnit;
	private final EDoubleElements pEDouble;
	private final EIntElements pEInt;
	private final TcpIpEndpointElements pTcpIpEndpoint;
	private final AggregationElements eAggregation;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDataCollector = new DataCollectorElements();
		this.pEndpoint = new EndpointElements();
		this.pDrone = new DroneElements();
		this.pPubBroker = new PubBrokerElements();
		this.pPublisher = new PublisherElements();
		this.pSubscriber = new SubscriberElements();
		this.pSubBroker = new SubBrokerElements();
		this.pEString = new EStringElements();
		this.pSensor = new SensorElements();
		this.pMeasuredVariable = new MeasuredVariableElements();
		this.eMeasurementDataUnit = new MeasurementDataUnitElements();
		this.pEDouble = new EDoubleElements();
		this.pEInt = new EIntElements();
		this.pTcpIpEndpoint = new TcpIpEndpointElements();
		this.eAggregation = new AggregationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.ubo.collector.dsl.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DataCollector:
	//	'DataCollector'
	//	'{'
	//	drone=Drone
	//	pubBroker=PubBroker
	//	subBroker=SubBroker
	//	'Publishers' '{' publishers+=Publisher ';' (publishers+=Publisher ';')* '}'
	//	'Subscriptions' '{' subscribers+=Subscriber ';' (subscribers+=Subscriber ';')* '}'
	//	'}';
	public DataCollectorElements getDataCollectorAccess() {
		return pDataCollector;
	}
	
	public ParserRule getDataCollectorRule() {
		return getDataCollectorAccess().getRule();
	}
	
	//Endpoint:
	//	TcpIpEndpoint;
	public EndpointElements getEndpointAccess() {
		return pEndpoint;
	}
	
	public ParserRule getEndpointRule() {
		return getEndpointAccess().getRule();
	}
	
	//Drone:
	//	'Drone'
	//	name=EString
	//	'{'
	//	'Sensors'
	//	'{'
	//	sensorsDrone+=Sensor sensorsDrone+=Sensor*
	//	'}'
	//	'}';
	public DroneElements getDroneAccess() {
		return pDrone;
	}
	
	public ParserRule getDroneRule() {
		return getDroneAccess().getRule();
	}
	
	//PubBroker:
	//	'PubBroker'
	//	name=EString
	//	'('
	//	id=Endpoint ','
	//	logPath=EString
	//	')' ';';
	public PubBrokerElements getPubBrokerAccess() {
		return pPubBroker;
	}
	
	public ParserRule getPubBrokerRule() {
		return getPubBrokerAccess().getRule();
	}
	
	//Publisher:
	//	'Publisher'
	//	name=EString
	//	'('
	//	id=Endpoint ','
	//	period=EDouble ','
	//	publishedMeasures+=[MeasuredVariable|EString] (',' publishedMeasures+=[MeasuredVariable|EString])*
	//	')';
	public PublisherElements getPublisherAccess() {
		return pPublisher;
	}
	
	public ParserRule getPublisherRule() {
		return getPublisherAccess().getRule();
	}
	
	//Subscriber:
	//	'Subscriber'
	//	name=EString
	//	'('
	//	id=Endpoint ','
	//	monitoredMeasure=[MeasuredVariable|EString] ','
	//	period=EDouble ','
	//	aggregation=Aggregation
	//	')';
	public SubscriberElements getSubscriberAccess() {
		return pSubscriber;
	}
	
	public ParserRule getSubscriberRule() {
		return getSubscriberAccess().getRule();
	}
	
	//SubBroker:
	//	'SubBroker'
	//	name=EString
	//	'('
	//	id=Endpoint ','
	//	configurationPath=EString
	//	')' ';';
	public SubBrokerElements getSubBrokerAccess() {
		return pSubBroker;
	}
	
	public ParserRule getSubBrokerRule() {
		return getSubBrokerAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Sensor:
	//	'Sensor'
	//	name=EString
	//	'measures'
	//	'{'
	//	sensorMeasuredVariables+=MeasuredVariable ';' (sensorMeasuredVariables+=MeasuredVariable ';')*
	//	'}';
	public SensorElements getSensorAccess() {
		return pSensor;
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}
	
	//MeasuredVariable:
	//	name=EString
	//	'('
	//	unit=MeasurementDataUnit
	//	')';
	public MeasuredVariableElements getMeasuredVariableAccess() {
		return pMeasuredVariable;
	}
	
	public ParserRule getMeasuredVariableRule() {
		return getMeasuredVariableAccess().getRule();
	}
	
	//enum MeasurementDataUnit:
	//	METER | METER_PER_SECOND | METER_PER_SECOND_SQUARED | DEGREE_CELSIUS | RADIAN | RADIAN_PER_SECOND | BAR | LITER |
	//	GRAM | NONE;
	public MeasurementDataUnitElements getMeasurementDataUnitAccess() {
		return eMeasurementDataUnit;
	}
	
	public EnumRule getMeasurementDataUnitRule() {
		return getMeasurementDataUnitAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//TcpIpEndpoint:
	//	ipAddress=EString ':'
	//	port=EInt;
	public TcpIpEndpointElements getTcpIpEndpointAccess() {
		return pTcpIpEndpoint;
	}
	
	public ParserRule getTcpIpEndpointRule() {
		return getTcpIpEndpointAccess().getRule();
	}
	
	//enum Aggregation:
	//	MIN | MAX | AVERAGE | FIRST | LAST | ALL;
	public AggregationElements getAggregationAccess() {
		return eAggregation;
	}
	
	public EnumRule getAggregationRule() {
		return getAggregationAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
