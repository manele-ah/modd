/*
 * generated by Xtext 2.14.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.ubo.collector.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.ubo.collector.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.ubo.collector.dsl.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DataCollector";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDataCollector
entryRuleDataCollector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataCollectorRule()); }
	iv_ruleDataCollector=ruleDataCollector
	{ $current=$iv_ruleDataCollector.current; }
	EOF;

// Rule DataCollector
ruleDataCollector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataCollector'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataCollectorAccess().getDataCollectorKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataCollectorAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataCollectorAccess().getDroneDroneParserRuleCall_2_0());
				}
				lv_drone_2_0=ruleDrone
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
					}
					set(
						$current,
						"drone",
						lv_drone_2_0,
						"fr.ubo.collector.dsl.Dsl.Drone");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataCollectorAccess().getPubBrokerPubBrokerParserRuleCall_3_0());
				}
				lv_pubBroker_3_0=rulePubBroker
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
					}
					set(
						$current,
						"pubBroker",
						lv_pubBroker_3_0,
						"fr.ubo.collector.dsl.Dsl.PubBroker");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataCollectorAccess().getSubBrokerSubBrokerParserRuleCall_4_0());
				}
				lv_subBroker_4_0=ruleSubBroker
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
					}
					set(
						$current,
						"subBroker",
						lv_subBroker_4_0,
						"fr.ubo.collector.dsl.Dsl.SubBroker");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='Publishers'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataCollectorAccess().getPublishersKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataCollectorAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataCollectorAccess().getPublishersPublisherParserRuleCall_7_0());
				}
				lv_publishers_7_0=rulePublisher
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
					}
					add(
						$current,
						"publishers",
						lv_publishers_7_0,
						"fr.ubo.collector.dsl.Dsl.Publisher");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataCollectorAccess().getSemicolonKeyword_8());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataCollectorAccess().getPublishersPublisherParserRuleCall_9_0_0());
					}
					lv_publishers_9_0=rulePublisher
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
						}
						add(
							$current,
							"publishers",
							lv_publishers_9_0,
							"fr.ubo.collector.dsl.Dsl.Publisher");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataCollectorAccess().getSemicolonKeyword_9_1());
			}
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataCollectorAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_12='Subscriptions'
		{
			newLeafNode(otherlv_12, grammarAccess.getDataCollectorAccess().getSubscriptionsKeyword_11());
		}
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getDataCollectorAccess().getLeftCurlyBracketKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataCollectorAccess().getSubscribersSubscriberParserRuleCall_13_0());
				}
				lv_subscribers_14_0=ruleSubscriber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
					}
					add(
						$current,
						"subscribers",
						lv_subscribers_14_0,
						"fr.ubo.collector.dsl.Dsl.Subscriber");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getDataCollectorAccess().getSemicolonKeyword_14());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataCollectorAccess().getSubscribersSubscriberParserRuleCall_15_0_0());
					}
					lv_subscribers_16_0=ruleSubscriber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataCollectorRule());
						}
						add(
							$current,
							"subscribers",
							lv_subscribers_16_0,
							"fr.ubo.collector.dsl.Dsl.Subscriber");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=';'
			{
				newLeafNode(otherlv_17, grammarAccess.getDataCollectorAccess().getSemicolonKeyword_15_1());
			}
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getDataCollectorAccess().getRightCurlyBracketKeyword_16());
		}
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getDataCollectorAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleEndpoint
entryRuleEndpoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndpointRule()); }
	iv_ruleEndpoint=ruleEndpoint
	{ $current=$iv_ruleEndpoint.current; }
	EOF;

// Rule Endpoint
ruleEndpoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEndpointAccess().getTcpIpEndpointParserRuleCall());
	}
	this_TcpIpEndpoint_0=ruleTcpIpEndpoint
	{
		$current = $this_TcpIpEndpoint_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDrone
entryRuleDrone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDroneRule()); }
	iv_ruleDrone=ruleDrone
	{ $current=$iv_ruleDrone.current; }
	EOF;

// Rule Drone
ruleDrone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Drone'
		{
			newLeafNode(otherlv_0, grammarAccess.getDroneAccess().getDroneKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDroneAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDroneRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDroneAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Sensors'
		{
			newLeafNode(otherlv_3, grammarAccess.getDroneAccess().getSensorsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDroneAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDroneAccess().getSensorsDroneSensorParserRuleCall_5_0());
				}
				lv_sensorsDrone_5_0=ruleSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDroneRule());
					}
					add(
						$current,
						"sensorsDrone",
						lv_sensorsDrone_5_0,
						"fr.ubo.collector.dsl.Dsl.Sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDroneAccess().getSensorsDroneSensorParserRuleCall_6_0());
				}
				lv_sensorsDrone_6_0=ruleSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDroneRule());
					}
					add(
						$current,
						"sensorsDrone",
						lv_sensorsDrone_6_0,
						"fr.ubo.collector.dsl.Dsl.Sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDroneAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDroneAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePubBroker
entryRulePubBroker returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPubBrokerRule()); }
	iv_rulePubBroker=rulePubBroker
	{ $current=$iv_rulePubBroker.current; }
	EOF;

// Rule PubBroker
rulePubBroker returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PubBroker'
		{
			newLeafNode(otherlv_0, grammarAccess.getPubBrokerAccess().getPubBrokerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPubBrokerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPubBrokerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getPubBrokerAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPubBrokerAccess().getIdEndpointParserRuleCall_3_0());
				}
				lv_id_3_0=ruleEndpoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPubBrokerRule());
					}
					set(
						$current,
						"id",
						lv_id_3_0,
						"fr.ubo.collector.dsl.Dsl.Endpoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getPubBrokerAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPubBrokerAccess().getLogPathEStringParserRuleCall_5_0());
				}
				lv_logPath_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPubBrokerRule());
					}
					set(
						$current,
						"logPath",
						lv_logPath_5_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getPubBrokerAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getPubBrokerAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRulePublisher
entryRulePublisher returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPublisherRule()); }
	iv_rulePublisher=rulePublisher
	{ $current=$iv_rulePublisher.current; }
	EOF;

// Rule Publisher
rulePublisher returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Publisher'
		{
			newLeafNode(otherlv_0, grammarAccess.getPublisherAccess().getPublisherKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPublisherAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPublisherRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getPublisherAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPublisherAccess().getIdEndpointParserRuleCall_3_0());
				}
				lv_id_3_0=ruleEndpoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPublisherRule());
					}
					set(
						$current,
						"id",
						lv_id_3_0,
						"fr.ubo.collector.dsl.Dsl.Endpoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getPublisherAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPublisherAccess().getPeriodEDoubleParserRuleCall_5_0());
				}
				lv_period_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPublisherRule());
					}
					set(
						$current,
						"period",
						lv_period_5_0,
						"fr.ubo.collector.dsl.Dsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getPublisherAccess().getCommaKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPublisherRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPublisherAccess().getPublishedMeasuresMeasuredVariableCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getPublisherAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPublisherRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPublisherAccess().getPublishedMeasuresMeasuredVariableCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getPublisherAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleSubscriber
entryRuleSubscriber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubscriberRule()); }
	iv_ruleSubscriber=ruleSubscriber
	{ $current=$iv_ruleSubscriber.current; }
	EOF;

// Rule Subscriber
ruleSubscriber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Subscriber'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubscriberAccess().getSubscriberKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubscriberAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubscriberRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSubscriberAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubscriberAccess().getIdEndpointParserRuleCall_3_0());
				}
				lv_id_3_0=ruleEndpoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubscriberRule());
					}
					set(
						$current,
						"id",
						lv_id_3_0,
						"fr.ubo.collector.dsl.Dsl.Endpoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSubscriberAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubscriberRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSubscriberAccess().getMonitoredMeasureMeasuredVariableCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSubscriberAccess().getCommaKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubscriberAccess().getPeriodEDoubleParserRuleCall_7_0());
				}
				lv_period_7_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubscriberRule());
					}
					set(
						$current,
						"period",
						lv_period_7_0,
						"fr.ubo.collector.dsl.Dsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getSubscriberAccess().getCommaKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubscriberAccess().getAggregationAggregationEnumRuleCall_9_0());
				}
				lv_aggregation_9_0=ruleAggregation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubscriberRule());
					}
					set(
						$current,
						"aggregation",
						lv_aggregation_9_0,
						"fr.ubo.collector.dsl.Dsl.Aggregation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getSubscriberAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleSubBroker
entryRuleSubBroker returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubBrokerRule()); }
	iv_ruleSubBroker=ruleSubBroker
	{ $current=$iv_ruleSubBroker.current; }
	EOF;

// Rule SubBroker
ruleSubBroker returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SubBroker'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubBrokerAccess().getSubBrokerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubBrokerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubBrokerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSubBrokerAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubBrokerAccess().getIdEndpointParserRuleCall_3_0());
				}
				lv_id_3_0=ruleEndpoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubBrokerRule());
					}
					set(
						$current,
						"id",
						lv_id_3_0,
						"fr.ubo.collector.dsl.Dsl.Endpoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSubBrokerAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubBrokerAccess().getConfigurationPathEStringParserRuleCall_5_0());
				}
				lv_configurationPath_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubBrokerRule());
					}
					set(
						$current,
						"configurationPath",
						lv_configurationPath_5_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubBrokerAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSubBrokerAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='measures'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getMeasuresKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getSensorMeasuredVariablesMeasuredVariableParserRuleCall_4_0());
				}
				lv_sensorMeasuredVariables_4_0=ruleMeasuredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"sensorMeasuredVariables",
						lv_sensorMeasuredVariables_4_0,
						"fr.ubo.collector.dsl.Dsl.MeasuredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getSemicolonKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getSensorMeasuredVariablesMeasuredVariableParserRuleCall_6_0_0());
					}
					lv_sensorMeasuredVariables_6_0=ruleMeasuredVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"sensorMeasuredVariables",
							lv_sensorMeasuredVariables_6_0,
							"fr.ubo.collector.dsl.Dsl.MeasuredVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getSensorAccess().getSemicolonKeyword_6_1());
			}
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMeasuredVariable
entryRuleMeasuredVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeasuredVariableRule()); }
	iv_ruleMeasuredVariable=ruleMeasuredVariable
	{ $current=$iv_ruleMeasuredVariable.current; }
	EOF;

// Rule MeasuredVariable
ruleMeasuredVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasuredVariableAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasuredVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMeasuredVariableAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasuredVariableAccess().getUnitMeasurementDataUnitEnumRuleCall_2_0());
				}
				lv_unit_2_0=ruleMeasurementDataUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasuredVariableRule());
					}
					set(
						$current,
						"unit",
						lv_unit_2_0,
						"fr.ubo.collector.dsl.Dsl.MeasurementDataUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMeasuredVariableAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTcpIpEndpoint
entryRuleTcpIpEndpoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTcpIpEndpointRule()); }
	iv_ruleTcpIpEndpoint=ruleTcpIpEndpoint
	{ $current=$iv_ruleTcpIpEndpoint.current; }
	EOF;

// Rule TcpIpEndpoint
ruleTcpIpEndpoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTcpIpEndpointAccess().getIpAddressEStringParserRuleCall_0_0());
				}
				lv_ipAddress_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTcpIpEndpointRule());
					}
					set(
						$current,
						"ipAddress",
						lv_ipAddress_0_0,
						"fr.ubo.collector.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTcpIpEndpointAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTcpIpEndpointAccess().getPortEIntParserRuleCall_2_0());
				}
				lv_port_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTcpIpEndpointRule());
					}
					set(
						$current,
						"port",
						lv_port_2_0,
						"fr.ubo.collector.dsl.Dsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule MeasurementDataUnit
ruleMeasurementDataUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='METER'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getMETEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMeasurementDataUnitAccess().getMETEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='METER_PER_SECOND'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getMETER_PER_SECONDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMeasurementDataUnitAccess().getMETER_PER_SECONDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='METER_PER_SECOND_SQUARED'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMeasurementDataUnitAccess().getMETER_PER_SECOND_SQUAREDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DEGREE_CELSIUS'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getDEGREE_CELSIUSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMeasurementDataUnitAccess().getDEGREE_CELSIUSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='RADIAN'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getRADIANEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMeasurementDataUnitAccess().getRADIANEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='RADIAN_PER_SECOND'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getRADIAN_PER_SECONDEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getMeasurementDataUnitAccess().getRADIAN_PER_SECONDEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='BAR'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getBAREnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getMeasurementDataUnitAccess().getBAREnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='LITER'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getLITEREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getMeasurementDataUnitAccess().getLITEREnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='GRAM'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getGRAMEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getMeasurementDataUnitAccess().getGRAMEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='NONE'
			{
				$current = grammarAccess.getMeasurementDataUnitAccess().getNONEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getMeasurementDataUnitAccess().getNONEEnumLiteralDeclaration_9());
			}
		)
	)
;

// Rule Aggregation
ruleAggregation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MIN'
			{
				$current = grammarAccess.getAggregationAccess().getMINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAggregationAccess().getMINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MAX'
			{
				$current = grammarAccess.getAggregationAccess().getMAXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAggregationAccess().getMAXEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='AVERAGE'
			{
				$current = grammarAccess.getAggregationAccess().getAVERAGEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAggregationAccess().getAVERAGEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='FIRST'
			{
				$current = grammarAccess.getAggregationAccess().getFIRSTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAggregationAccess().getFIRSTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='LAST'
			{
				$current = grammarAccess.getAggregationAccess().getLASTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAggregationAccess().getLASTEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='ALL'
			{
				$current = grammarAccess.getAggregationAccess().getALLEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAggregationAccess().getALLEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
